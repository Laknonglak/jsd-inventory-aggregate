SELECT *
FROM Products;

--COUNT
SELECT product_id, product_name, quantity_in_stock, unit_price, category_id
FROM Products
WHERE unit_price BETWEEN 1 AND 2;

SELECT COUNT(*) AS product_count
FROM Products
WHERE unit_price BETWEEN 1 AND 2;


SELECT category_id, COUNT(*) AS product_count
FROM Products
WHERE unit_price BETWEEN 1 AND 2
GROUP BY category_id;


--SUM
SELECT SUM(quantity_in_stock) AS TotalItem
FROM Products;

SELECT category_id, SUM(quantity_in_stock) AS TotalItem
FROM Products
GROUP BY category_id;


--MAX / MIN
SELECT product_name, product_brand, MAX(unit_price) AS MaxPrice
FROM Products;

SELECT product_name, product_brand, unit_price
FROM Products
WHERE unit_price = (SELECT MAX(unit_price)
                    FROM Products);
                    
SELECT product_name, product_brand, MIN(unit_price) AS MinPrice
FROM Products;


--AVG
SELECT AVG(unit_price) AS AvgPrice
FROM Products;


SELECT category_id, AVG(unit_price) AS AvgPrice
FROM Products
GROUP BY category_id;

--ROUND
SELECT category_id, ROUND(AVG(unit_price),2) AS AvgPrice
FROM Products
GROUP BY category_id;


--GROUP BY
SELECT category_id, product_name, ROUND(AVG(unit_price),2) AS AvgPrice
FROM Products
GROUP BY category_id, product_name;


SELECT category_id,product_name, ROUND(AVG(unit_price),2) AS AvgPrice
FROM Products
GROUP BY product_name, category_id;


--HAVING
SELECT category_id, COUNT(*) AS ItemsCount
FROM Products
GROUP BY category_id;

SELECT category_id, COUNT(*) AS ItemsCount
FROM Products
GROUP BY category_id
HAVING COUNT(*) >5;


SELECT category_id, AVG(unit_price) AS AvgPrice
FROM Products
GROUP BY category_id;


SELECT category_id, AVG(unit_price) AS AvgPrice
FROM Products
GROUP BY category_id
HAVING AVG(unit_price) > 2;